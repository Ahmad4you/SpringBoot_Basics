spring.application.name=boot-cloud01

# ===============================
# = DATA SOURCE
# ===============================
# Im Cloud-Betrieb könnte diese mit einer echten Datenbank wie MySQL oder PostgreSQL konfiguriert werden, 
# während in der lokalen Entwicklung H2 verwendet wird.
spring.datasource.url=jdbc:h2:mem:tesdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql = true

# Das DDL-Auto create-drop wird typischerweise in der Entwicklung verwendet, während in der Produktion update oder validate sinnvoller ist.
spring.jpa.hibernate.ddl-auto = create-drop


# ===============================
# = Data - Rest
# ===============================
# Das basePath ist unterschiedlich definiert: /api für lokal, /rest für die Cloud.
spring.data.rest.basePath=/api

# ===============================
# = ACTUATOR
# ===============================
# Unterschiedliche context-paths für Monitoring
management.context-path=/monitor
endpoints.shutdown.enabled=true

# Spring Cloud Config deaktivieren
spring.cloud.config.enabled=false
spring.cloud.config.import-check.enabled=false
#spring.config.import=optional:configserver:http://localhost:8888
#spring.config.import=configserver:http://localhost:8888


# Um sicherzustellen, dass Anwendung in unterschiedlichen Umgebungen (lokal, Cloud) richtig funktioniert, 
# einfach Spring Profiles nutzen.
# ===============================
# = Profile = dev or production (local or cloud)
# Run Configurations -> Unter Arguments füge hinzu: --spring.profiles.active=cloud
# ===============================
# Standardprofil:
spring.profiles.active=local


